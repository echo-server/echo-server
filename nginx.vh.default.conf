# nginx.vh.default.conf - OpenResty server configuration
# This file is installed at `/etc/nginx/conf.d/default.conf`
# Loaded via the include directive in nginx.conf

server {
    listen       80;
    server_name  localhost;

    # Server error page redirection configuration
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # Long connection hang route - for testing long-term connections
    location = /hang {
        # Set extremely long timeout (365 days)
        client_body_timeout 365d;
        send_timeout 365d;
        keepalive_timeout 365d;

        content_by_lua_block {
            local sock, err = ngx.req.socket(true)
            if not sock then
                ngx.log(ngx.ERR, "Failed to get the client socket: ", err)
                return ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
            end

            while true do
                local bytes, err = sock:receive(1)
                if err == "closed" then
                    ngx.log(ngx.ERR, "Client disconnected")
                    break
                end

                ngx.say("\n")
                ngx.flush(true)
                ngx.sleep(5)
            end
        }
    }

    # Main route - Echo server
    location / {
        lua_need_request_body on;
        content_by_lua_block {
            ngx.header["Server"] = "echoserver"

            local headers = ngx.req.get_headers()
            local keys = {}
            for key, val in pairs(headers) do
                table.insert(keys, key)
            end
            table.sort(keys)

            ngx.say(tmpl({os=os, ngx=ngx, keys=keys, headers=headers}))
        }
    }
}